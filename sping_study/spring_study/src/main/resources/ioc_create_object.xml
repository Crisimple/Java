<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 无参构造类   -->
    <bean id="user" class="ioc_create_object.User">
        <property name="name" value="这是我的名字，你的名字呢？"/>
    </bean>
    
    
    <!--  有参构造类  -->
    <!--  第一种根据index参数下标设置  -->
    <bean id="userT1" class="ioc_create_object.UserT">
        <constructor-arg index="0" value="xxxxx"/>
    </bean>
    <!--  第二种根据参数名字设置  -->
    <bean id="userT2" class="ioc_create_object.UserT">
        <constructor-arg name="name" value="yyyy"/>
    </bean>
    
    <!-- 第三种根据参数类型设置 -->
    <bean id="userT3" class="ioc_create_object.UserT">
        <constructor-arg type="java.lang.String" value="zzzzz"/>
    </bean>
    
    <!--  Spring设置  -->
    
    <!--设置别名：在获取Bean的时候可以使用别名获取-->
    <alias name="userT1" alias="userT11"/>
    
    <!--bean就是java对象,由Spring创建和管理-->
    <!--
       id 是bean的标识符,要唯一,如果没有配置id,name就是默认标识符
       如果配置id,又配置了name,那么name是别名
       name可以设置多个别名,可以用逗号,分号,空格隔开
       如果不配置id和name,可以根据applicationContext.getBean(.class)获取对象;
    
    class是bean的全限定名=包名+类名
    -->
    <bean id="user" name="user1, user2 user3;user4" class="ioc_create_object.User">
        <property name="name" value="SpringXXX"></property>
    </bean>
    
    <!-- 团队的合作通过import来实现 -->
    <import resource="ioc.xml"/>
</beans>